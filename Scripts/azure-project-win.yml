parameters:
  name: ''
  path: ''
  graphics: 'NANOVG'
  target: 'All'
  artifactName: ''

steps:
  - bash: |
      graphics=${{ parameters.graphics }}
      if [ $graphics = "LICE" ]
      then
        cd ./${{ parameters.path }}/${{ parameters.name }}/config
        sed -i.bu 's/IGRAPHICS_NANOVG;IGRAPHICS_GL2/IGRAPHICS_LICE/' ${{ parameters.name }}-win.props
      elif [ $graphics = "CAIRO" ]
      then
        cd ./${{ parameters.path }}/${{ parameters.name }}/config
        sed -i.bu 's/IGRAPHICS_NANOVG;IGRAPHICS_GL2/IGRAPHICS_CAIRO/' ${{ parameters.name }}-win.props
      elif [ $graphics = "AGG" ]
      then
        cd ./${{ parameters.path }}/${{ parameters.name }}/config
        sed -i.bu 's/IGRAPHICS_NANOVG;IGRAPHICS_GL2/IGRAPHICS_AGG/' ${{ parameters.name }}-win.props
      fi
    displayName: Set graphics string

  - task: VSBuild@1
    inputs:
      solution: '${{ parameters.path }}/${{ parameters.name }}/${{ parameters.name }}.sln'
      vsVersion: '15.0'
      platform: x64
      configuration: '${{ parameters.configuration }}'
    displayName: Compile Visual Studio Solution x64

  # - task: VSBuild@1
  #   inputs:
  #     solution: '${{ parameters.path }}/${{ parameters.name }}/${{ parameters.name }}.sln'
  #     vsVersion: '15.0'
  #     platform: Win32
  #     configuration: '${{ parameters.configuration }}'
  #   displayName: Compile Visual Studio Solution Win32

  # - bash: |
  #     rm -r ./${{ parameters.path }}/${{ parameters.name }}/build-win/*/bin/x64
  #     rm -r ./${{ parameters.path }}/${{ parameters.name }}/build-win/*/x64
  #     rm -r ./${{ parameters.path }}/${{ parameters.name }}/build-win/aax/x64/bin/${{ parameters.name }}.iobj
  #     rm -r ./${{ parameters.path }}/${{ parameters.name }}/build-win/aax/x64/bin/${{ parameters.name }}.ipdb
  #     rm -r ./${{ parameters.path }}/${{ parameters.name }}/build-win/aax/x64/Release
  #     rm -r ./${{ parameters.path }}/${{ parameters.name }}/build-win/vst3/x64/bin/${{ parameters.name }}.iobj
  #     rm -r ./${{ parameters.path }}/${{ parameters.name }}/build-win/vst3/x64/bin/${{ parameters.name }}.ipdb
  #     rm -r ./${{ parameters.path }}/${{ parameters.name }}/build-win/vst3/x64/Release
  #   displayName: Delete unwanted files

  # - bash: |
  #     mkdir -p ${{ parameters.path }}/${{ parameters.name }}/build-win/
  #     echo "hello ${{ parameters.graphics }}" > ${{ parameters.path }}/${{ parameters.name }}/build-mac/${{ parameters.graphics }}.txt

  #   displayName: TEST PAYLOAD

  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'WIN_${{ parameters.artifactName }}'
      targetPath: '${{ parameters.path }}/${{ parameters.name }}/build-win'
    displayName: Publish ${{ parameters.name }}