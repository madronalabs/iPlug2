 parameters:
  name: ''
  platformStr: ''
  graphics: ''
  releaseNotes: 'Here you can download binaries of the iPlug 2 examples and tests, built by continuous integration.\n\nNo binaries are code-signed, so they may not work in hosts that require a valid signature.'

 steps:
  - ${{ if eq(parameters.platformStr, 'WEB') }}:
    - task: DownloadPipelineArtifact@0
      inputs:
        artifactName: 'WEB_${{parameters.name}}_${{parameters.graphics}}'
        targetPath: 'webgl/${{parameters.name}}'

    # - task: DownloadPipelineArtifact@0
    #   inputs:
    #     artifactName: 'WEB_${{parameters.name}}_CANVAS'
    #     targetPath: 'canvas/${{parameters.name}}'

    - bash: |
        sed -i.bak 's,var origin = "/";,var origin = "https://iplug2.github.io/webgl/${{parameters.name}}/";,g' ./webgl/${{parameters.name}}/scripts/${{parameters.name}}-awn.js
        # sed -i.bak 's,var origin = "/";,var origin = "https://iplug2.github.io/canvas/${{parameters.name}}/";,g' ./canvas/${{parameters.name}}/scripts/${{parameters.name}}-awn.js
        rm  ./webgl/${{parameters.name}}/scripts/*.bak
        rm  ./canvas/${{parameters.name}}/scripts/*.bak
      displayName: Set origins

    - bash: |
        git config user.email olilarkin@googlemail.com
        git config user.name olilarkin
        git add *
        git commit -m "publish via pipeline"
        git push origin master
      displayName: Publish to github pages

  - ${{ if or(eq(parameters.platformStr, 'MAC'), eq(parameters.platformStr, 'WIN')) }}:
    - bash: |
        rm -r $(BUILD_BINARIESDIRECTORY)
      displayName: empty binaries directory

    - task: DownloadPipelineArtifact@0
      inputs:
        artifactName: '${{parameters.platformStr}}_VST2_${{parameters.name}}_${{parameters.graphics}}'
        targetPath: '$(Build.BinariesDirectory)/VST2'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.BinariesDirectory)/VST2'
        archiveFile: '$(Build.ArtifactStagingDirectory)/${{parameters.platformStr}}_VST2_${{parameters.name}}_${{parameters.graphics}}.zip' 
        includeRootFolder: false

    - task: GithubRelease@0
      inputs:
        gitHubConnection: olilarkin
        repositoryName: 'iPlug2/iPlug2.github.io'
        action: 'edit' 
        target: 'master'
        tag: 'latest'
        title: 'iPlug 2 Examples'
        releaseNotes: ${{parameters.releaseNotes}}
        assets: '$(Build.ArtifactStagingDirectory)/${{parameters.platformStr}}_VST2_${{parameters.name}}_${{parameters.graphics}}.zip'
        assetUploadMode: 'replace'
        isDraft: true
        isPreRelease: true
        addChangeLog: false

    - task: DownloadPipelineArtifact@0
      inputs:
        artifactName: '${{parameters.platformStr}}_VST3_${{parameters.name}}_${{parameters.graphics}}'
        targetPath: '$(Build.BinariesDirectory)/VST3'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.BinariesDirectory)/VST3'
        archiveFile: '$(Build.ArtifactStagingDirectory)/${{parameters.platformStr}}_VST3_${{parameters.name}}_${{parameters.graphics}}.zip' 
        includeRootFolder: false

    - task: GithubRelease@0
      inputs:
        gitHubConnection: olilarkin
        repositoryName: 'iPlug2/iPlug2.github.io'
        action: 'edit' 
        target: 'master'
        tag: 'latest'
        title: 'iPlug 2 Examples'
        releaseNotes: ${{parameters.releaseNotes}}
        assets: '$(Build.ArtifactStagingDirectory)/${{parameters.platformStr}}_VST3_${{parameters.name}}_${{parameters.graphics}}.zip'
        assetUploadMode: 'replace'
        isDraft: true
        isPreRelease: true
        addChangeLog: false

    - task: DownloadPipelineArtifact@0
      inputs:
        artifactName: '${{parameters.platformStr}}_AAX_${{parameters.name}}_${{parameters.graphics}}'
        targetPath: '$(Build.BinariesDirectory)/AAX'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.BinariesDirectory)/AAX'
        archiveFile: '$(Build.ArtifactStagingDirectory)/${{parameters.platformStr}}_AAX_${{parameters.name}}_${{parameters.graphics}}.zip' 
        includeRootFolder: false

    - task: GithubRelease@0
      inputs:
        gitHubConnection: olilarkin
        repositoryName: 'iPlug2/iPlug2.github.io'
        action: 'edit' 
        target: 'master'
        tag: 'latest'
        title: 'iPlug 2 Examples'
        releaseNotes: ${{parameters.releaseNotes}}
        assets: '$(Build.ArtifactStagingDirectory)/${{parameters.platformStr}}_AAX_${{parameters.name}}_${{parameters.graphics}}.zip'
        assetUploadMode: 'replace'
        isDraft: true
        isPreRelease: true
        addChangeLog: false

    - task: DownloadPipelineArtifact@0
      inputs:
        artifactName: '${{parameters.platformStr}}_APP_${{parameters.name}}_${{parameters.graphics}}'
        targetPath: '$(Build.BinariesDirectory)/APP'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.BinariesDirectory)/APP'
        archiveFile: '$(Build.ArtifactStagingDirectory)/${{parameters.platformStr}}_APP_${{parameters.name}}_${{parameters.graphics}}.zip' 
        includeRootFolder: false

    - task: GithubRelease@0
      inputs:
        gitHubConnection: olilarkin
        repositoryName: 'iPlug2/iPlug2.github.io'
        action: 'edit' 
        target: 'master'
        tag: 'latest'
        title: 'iPlug 2 Examples'
        releaseNotes: ${{parameters.releaseNotes}}
        assets: '$(Build.ArtifactStagingDirectory)/${{parameters.platformStr}}_APP_${{parameters.name}}_${{parameters.graphics}}.zip'
        assetUploadMode: 'replace'
        isDraft: true
        isPreRelease: true
        addChangeLog: false

  - ${{ if eq(parameters.platformStr, 'MAC') }}:
    - task: DownloadPipelineArtifact@0
      inputs:
        artifactName: '${{parameters.platformStr}}_AUv2_${{parameters.name}}_${{parameters.graphics}}'
        targetPath: '$(Build.BinariesDirectory)/AUv2'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.BinariesDirectory)/AUv2'
        archiveFile: '$(Build.ArtifactStagingDirectory)/${{parameters.platformStr}}_AUv2_${{parameters.name}}_${{parameters.graphics}}.zip' 
        includeRootFolder: false

    - task: GithubRelease@0
      inputs:
        gitHubConnection: olilarkin
        repositoryName: 'iPlug2/iPlug2.github.io'
        action: 'edit' 
        target: 'master'
        tag: 'latest'
        title: 'iPlug 2 Examples'
        releaseNotes: ${{parameters.releaseNotes}}
        assets: '$(Build.ArtifactStagingDirectory)/${{parameters.platformStr}}_AUv2_${{parameters.name}}_${{parameters.graphics}}.zip'
        assetUploadMode: 'replace'
        isDraft: true
        isPreRelease: true
        addChangeLog: false
